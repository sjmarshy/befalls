{"version":3,"sources":["../../src/reducers/entry.js"],"names":[],"mappings":";;eAMiB,OAAO,CAAC,qBAAqB,CAAC;;IAL7C,SAAS,YAAT,SAAS;IACT,eAAe,YAAf,eAAe;IACf,iBAAiB,YAAjB,iBAAiB;IACjB,cAAc,YAAd,cAAc;IACd,gBAAgB,YAAhB,gBAAgB;IAChB,WAAW,YAAX,WAAW;;gBACM,OAAO,CAAC,WAAW,CAAC;;IAA/B,MAAM,aAAN,MAAM;;AAEd,MAAM,CAAC,OAAO,GAAG,YAIU;MAJT,KAAK,yDAAG,MAAM,CAAC;;AAE/B,WAAO,EAAE,MAAM,CAAC,EAAE,CAAC;AACnB,iBAAa,EAAE,KAAK;AACpB,SAAK,EAAE,EAAE,EAAE,CAAC;MAAE,MAAM;;AAEpB,UAAQ,MAAM,CAAC,IAAI;;AAEnB,SAAK,SAAS;;AAEZ,aAAO,KAAK,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;;AAAA,AAE1C,SAAK,eAAe;;AAElB,aAAO,KAAK,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,CACtC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;;AAAA,AAE5C,SAAK,WAAW;;AAEd,aAAO,KAAK,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;;AAAA,AAE3C,SAAK,gBAAgB;;AAEnB,aAAO,KAAK,CAAC,KAAK,CAAC,EAAC,gBAAgB,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;;AAAA,AAEtE,SAAK,iBAAiB;;AAEpB,UAAI,MAAM,GAAI,KAAK,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;;AAEhD,aAAO,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAC/C,MAAM,CAAC,WAAW,EAAE;;AAElB,YAAI,EAAE,MAAM,CAAC,YAAY;AACzB,YAAI,EAAE,MAAM,CAAC,IAAI;AACjB,gBAAQ,EAAE,MAAM,CAAC,QAAQ;AACzB,mBAAW,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;;AAAA,AAE9C,SAAK,cAAc;;AAEjB,aAAO,KAAK,CAAC,KAAK,CAAC,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;;AAAA,AAEpE;;AAEE,aAAO,KAAK,CAAC;AAAA,GACd;CACF,CAAC","file":"entry.js","sourcesContent":["const { \n  ADD_ENTRY,\n  RECEIVE_ENTRIES,\n  ADD_ENTRY_SUCCESS,\n  ADD_ENTRY_FAIL,\n  GET_ENTRIES_FAIL,\n  GET_ENTRIES} = require(\"../actions/entry.js\");\nconst { fromJS } = require(\"immutable\");\n\nmodule.exports = (state = fromJS({\n\n  entries: fromJS({}),\n  addingEntries: false,\n  error: \"\" }), action) => {\n\n  switch (action.type) {\n\n  case ADD_ENTRY:\n\n    return state.set(\"addingEntries\", true);\n\n  case RECEIVE_ENTRIES:\n\n    return state.set(\"gettingEntries\", false)\n      .set(\"entries\", fromJS(action.entries));\n\n  case GET_ENTRIES:\n\n    return state.set(\"gettingEntries\", true);\n\n  case GET_ENTRIES_FAIL:\n\n    return state.merge({\"gettingEntries\": false, error: action.error });\n\n  case ADD_ENTRY_SUCCESS: \n\n    let nstate =  state.set(\"addingEntries\", false);\n\n    return nstate.set(\"entries\", state.get(\"entries\").set(\n          action.timeCreated, {\n\n            type: action.trackingType,\n            name: action.name,\n            severity: action.severity,\n            timeCreated: action.timeCreated }));\n\n  case ADD_ENTRY_FAIL:\n\n    return state.merge({ addingEntries: false, error: action.error });\n\n  default:\n\n    return state;\n  }\n};\n"]}