{"version":3,"sources":["../src/logfile.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;AAEb,IAAM,IAAI,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACzC,IAAM,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAE3B,SAAS,qBAAqB,CAAC,IAAI,EAAE;;AAEnC,SAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,YAAM;;AAE9C,WAAO,IAAI,CAAC;GACb,CAAC,CAAC;CACJ;;AAED,IAAM,gBAAgB,GAAG,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG,EAAE,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAK;;AAEnF,SAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,UAAU,EAAK;;AAE7C,QAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;;AAEzB,UAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;;AAEvC,eAAS,CAAC,IAAI,CAAC;;AAEb,oBAAY,EAAZ,YAAY;AACZ,YAAI,EAAJ,IAAI;AACJ,gBAAQ,EAAR,QAAQ;AACR,mBAAW,EAAX,WAAW;OACZ,CAAC,CAAC;;AAEH,aAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;KACnD,MAAM;;AAEL,YAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;KAC3C;GACF,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC,EAAK;;AAEd,WAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;GAClB,CAAC,CAAC;CACJ,CAAC,CAAC;;AAEH,IAAM,YAAY,GAAG,SAAf,YAAY,CAAI,GAAG,EAAK;;AAE5B,SAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,UAAU,EAAK;;AAE7C,QAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;;AAEzB,aAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;KAC/B,MAAM;;AAEL,YAAM,IAAI,KAAK,kBAAgB,GAAG,0BAAuB,CAAC;KAC3D;GACF,CAAC,CAAC;CACJ,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG;;AAEf,uBAAqB,EAArB,qBAAqB;AACrB,kBAAgB,EAAhB,gBAAgB;AAChB,cAAY,EAAZ,YAAY;CACb,CAAC","file":"logfile.js","sourcesContent":["/* eslint no-console:0 */\n\"use strict\";\n\nconst fs__ = require(\"./fileStorage.js\");\nconst R = require(\"ramda\");\n\nfunction ensureLogfileExists__(name) {\n\n  return fs__.createStorageFile(name).catch(() => {\n\n    return true;\n  });\n}\n\nconst addEntryToFile__ = R.curry((loc, trackingType, name, severity, timeCreated) => {\n\n  return fs__.readFile(loc).then((dataString) => {\n\n    if (dataString.length > 0) {\n\n      let dataArray = JSON.parse(dataString);\n\n      dataArray.push({\n\n        trackingType,\n        name,\n        severity,\n        timeCreated\n      });\n\n      return fs__.write(loc, JSON.stringify(dataArray));\n    } else {\n\n      throw new Error(\"logfile does not exist\");\n    }\n  }).catch((e) => {\n\n    console.error(e);\n  });\n});\n\nconst getEntries__ = (loc) => {\n\n  return fs__.readFile(loc).then((dataString) => {\n\n    if (dataString.length > 0) {\n\n      return JSON.parse(dataString);\n    } else {\n\n      throw new Error(`datafile at ${loc} appears to be empty`);\n    }\n  });\n};\n\nmodule.exports = {\n\n  ensureLogfileExists__,\n  addEntryToFile__,\n  getEntries__\n};\n"]}